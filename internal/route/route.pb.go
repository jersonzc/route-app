// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: route/route.proto

package route

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Points are represented as latitude-longitude pairs in the E7 representation
// (degrees multiplied by 10**7 and rounded to the nearest integer).
// Latitudes should be in the range +/- 90 degrees and longitude should be in
// the range +/- 180 degrees (inclusive).
type Point struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      int32                  `protobuf:"varint,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     int32                  `protobuf:"varint,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Point) Reset() {
	*x = Point{}
	mi := &file_route_route_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_route_route_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_route_route_proto_rawDescGZIP(), []int{0}
}

func (x *Point) GetLatitude() int32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Point) GetLongitude() int32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

// A feature names something at a given point.
type Feature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Location      *Point                 `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Feature) Reset() {
	*x = Feature{}
	mi := &file_route_route_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Feature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feature) ProtoMessage() {}

func (x *Feature) ProtoReflect() protoreflect.Message {
	mi := &file_route_route_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feature.ProtoReflect.Descriptor instead.
func (*Feature) Descriptor() ([]byte, []int) {
	return file_route_route_proto_rawDescGZIP(), []int{1}
}

func (x *Feature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Feature) GetLocation() *Point {
	if x != nil {
		return x.Location
	}
	return nil
}

// A latitude-longitude rectangle, represented as two diagonally opposite
// points "lo" and "hi".
type Rectangle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lo            *Point                 `protobuf:"bytes,1,opt,name=lo,proto3" json:"lo,omitempty"`
	Hi            *Point                 `protobuf:"bytes,2,opt,name=hi,proto3" json:"hi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rectangle) Reset() {
	*x = Rectangle{}
	mi := &file_route_route_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rectangle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rectangle) ProtoMessage() {}

func (x *Rectangle) ProtoReflect() protoreflect.Message {
	mi := &file_route_route_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rectangle.ProtoReflect.Descriptor instead.
func (*Rectangle) Descriptor() ([]byte, []int) {
	return file_route_route_proto_rawDescGZIP(), []int{2}
}

func (x *Rectangle) GetLo() *Point {
	if x != nil {
		return x.Lo
	}
	return nil
}

func (x *Rectangle) GetHi() *Point {
	if x != nil {
		return x.Hi
	}
	return nil
}

// RouteSummary contains the number of individual points received, the number of
// detected features, and the total distance covered as the cumulative sum of
// the distance between each point.
type RouteSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PointCount    int32                  `protobuf:"varint,1,opt,name=point_count,json=pointCount,proto3" json:"point_count,omitempty"`
	FeatureCount  int32                  `protobuf:"varint,2,opt,name=feature_count,json=featureCount,proto3" json:"feature_count,omitempty"`
	Distance      int32                  `protobuf:"varint,3,opt,name=distance,proto3" json:"distance,omitempty"`
	ElapsedTime   int32                  `protobuf:"varint,4,opt,name=elapsed_time,json=elapsedTime,proto3" json:"elapsed_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteSummary) Reset() {
	*x = RouteSummary{}
	mi := &file_route_route_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteSummary) ProtoMessage() {}

func (x *RouteSummary) ProtoReflect() protoreflect.Message {
	mi := &file_route_route_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteSummary.ProtoReflect.Descriptor instead.
func (*RouteSummary) Descriptor() ([]byte, []int) {
	return file_route_route_proto_rawDescGZIP(), []int{3}
}

func (x *RouteSummary) GetPointCount() int32 {
	if x != nil {
		return x.PointCount
	}
	return 0
}

func (x *RouteSummary) GetFeatureCount() int32 {
	if x != nil {
		return x.FeatureCount
	}
	return 0
}

func (x *RouteSummary) GetDistance() int32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *RouteSummary) GetElapsedTime() int32 {
	if x != nil {
		return x.ElapsedTime
	}
	return 0
}

// A RouteNote is a message sent while at a given point.
type RouteNote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Location      *Point                 `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteNote) Reset() {
	*x = RouteNote{}
	mi := &file_route_route_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteNote) ProtoMessage() {}

func (x *RouteNote) ProtoReflect() protoreflect.Message {
	mi := &file_route_route_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteNote.ProtoReflect.Descriptor instead.
func (*RouteNote) Descriptor() ([]byte, []int) {
	return file_route_route_proto_rawDescGZIP(), []int{4}
}

func (x *RouteNote) GetLocation() *Point {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *RouteNote) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_route_route_proto protoreflect.FileDescriptor

const file_route_route_proto_rawDesc = "" +
	"\n" +
	"\x11route/route.proto\x12\x05route\"A\n" +
	"\x05Point\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x05R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x05R\tlongitude\"G\n" +
	"\aFeature\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12(\n" +
	"\blocation\x18\x02 \x01(\v2\f.route.PointR\blocation\"G\n" +
	"\tRectangle\x12\x1c\n" +
	"\x02lo\x18\x01 \x01(\v2\f.route.PointR\x02lo\x12\x1c\n" +
	"\x02hi\x18\x02 \x01(\v2\f.route.PointR\x02hi\"\x93\x01\n" +
	"\fRouteSummary\x12\x1f\n" +
	"\vpoint_count\x18\x01 \x01(\x05R\n" +
	"pointCount\x12#\n" +
	"\rfeature_count\x18\x02 \x01(\x05R\ffeatureCount\x12\x1a\n" +
	"\bdistance\x18\x03 \x01(\x05R\bdistance\x12!\n" +
	"\felapsed_time\x18\x04 \x01(\x05R\velapsedTime\"O\n" +
	"\tRouteNote\x12(\n" +
	"\blocation\x18\x01 \x01(\v2\f.route.PointR\blocation\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xd8\x01\n" +
	"\x05Route\x12,\n" +
	"\n" +
	"GetFeature\x12\f.route.Point\x1a\x0e.route.Feature\"\x00\x124\n" +
	"\fListFeatures\x12\x10.route.Rectangle\x1a\x0e.route.Feature\"\x000\x01\x124\n" +
	"\vRecordRoute\x12\f.route.Point\x1a\x13.route.RouteSummary\"\x00(\x01\x125\n" +
	"\tRouteChat\x12\x10.route.RouteNote\x1a\x10.route.RouteNote\"\x00(\x010\x01B%Z#github.com/jersonzc/route-app/routeb\x06proto3"

var (
	file_route_route_proto_rawDescOnce sync.Once
	file_route_route_proto_rawDescData []byte
)

func file_route_route_proto_rawDescGZIP() []byte {
	file_route_route_proto_rawDescOnce.Do(func() {
		file_route_route_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_route_route_proto_rawDesc), len(file_route_route_proto_rawDesc)))
	})
	return file_route_route_proto_rawDescData
}

var file_route_route_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_route_route_proto_goTypes = []any{
	(*Point)(nil),        // 0: route.Point
	(*Feature)(nil),      // 1: route.Feature
	(*Rectangle)(nil),    // 2: route.Rectangle
	(*RouteSummary)(nil), // 3: route.RouteSummary
	(*RouteNote)(nil),    // 4: route.RouteNote
}
var file_route_route_proto_depIdxs = []int32{
	0, // 0: route.Feature.location:type_name -> route.Point
	0, // 1: route.Rectangle.lo:type_name -> route.Point
	0, // 2: route.Rectangle.hi:type_name -> route.Point
	0, // 3: route.RouteNote.location:type_name -> route.Point
	0, // 4: route.Route.GetFeature:input_type -> route.Point
	2, // 5: route.Route.ListFeatures:input_type -> route.Rectangle
	0, // 6: route.Route.RecordRoute:input_type -> route.Point
	4, // 7: route.Route.RouteChat:input_type -> route.RouteNote
	1, // 8: route.Route.GetFeature:output_type -> route.Feature
	1, // 9: route.Route.ListFeatures:output_type -> route.Feature
	3, // 10: route.Route.RecordRoute:output_type -> route.RouteSummary
	4, // 11: route.Route.RouteChat:output_type -> route.RouteNote
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_route_route_proto_init() }
func file_route_route_proto_init() {
	if File_route_route_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_route_route_proto_rawDesc), len(file_route_route_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_route_route_proto_goTypes,
		DependencyIndexes: file_route_route_proto_depIdxs,
		MessageInfos:      file_route_route_proto_msgTypes,
	}.Build()
	File_route_route_proto = out.File
	file_route_route_proto_goTypes = nil
	file_route_route_proto_depIdxs = nil
}
